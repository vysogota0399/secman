// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vysogota0399/secman/internal/server/iam (interfaces: SessionsRepository)

// Package iam is a generated GoMock package.
package iam

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	repositories "github.com/vysogota0399/secman/internal/server/iam/repositories"
)

// MockSessionsRepository is a mock of SessionsRepository interface.
type MockSessionsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockSessionsRepositoryMockRecorder
}

// MockSessionsRepositoryMockRecorder is the mock recorder for MockSessionsRepository.
type MockSessionsRepositoryMockRecorder struct {
	mock *MockSessionsRepository
}

// NewMockSessionsRepository creates a new mock instance.
func NewMockSessionsRepository(ctrl *gomock.Controller) *MockSessionsRepository {
	mock := &MockSessionsRepository{ctrl: ctrl}
	mock.recorder = &MockSessionsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionsRepository) EXPECT() *MockSessionsRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockSessionsRepository) Create(arg0 context.Context, arg1 *repositories.Session) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockSessionsRepositoryMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSessionsRepository)(nil).Create), arg0, arg1)
}

// Get mocks base method.
func (m *MockSessionsRepository) Get(arg0 context.Context, arg1 string) (repositories.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(repositories.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockSessionsRepositoryMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockSessionsRepository)(nil).Get), arg0, arg1)
}
