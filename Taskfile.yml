version: '3'

# "unseal_tokens":["HTJpdfDuqn1E2E3FwKwldkg6Y6mz+a+h2qztHwOLs8he","ihscDbZF385KRv5yzkwUgtDTk3FZqyNnwdCGmliay7aR","2LZtGY17Lc45hnVFIOFFfmDSnY/y3vb4lOFjHAjhkZZ+","54m/bcnbXT2Yv2+kAtjPf0z7vnBCqevrxkXMn9JGPDG6","s43kx6ZQGOxPFQSDR1tBKVisLH6eBo3hd2NUZzqqHiA4"]

env:
  ROOT_TOKEN: "3bPuOMYNtgI9osmR60PrKBvz27fhNYc6E+pZJVFRhgs="
  JWT_TOKEN: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjIwNjM2NDQ2NjksImlhdCI6MTc0ODI4NDY2OSwiU2lkIjoiY2NiZDljODMtYWMxOS00YTBkLWI1ZDMtMmQzY2E3ZjVkOTc3In0.eTDyj2Hb7hUlHzjbWuIJu_3VGRqx7S-UhburmAqesO8'


tasks:
  status:
    cmd: curl http://127.0.0.1:8080/api/sys/status | jq

  init:
    cmd: curl -v -X POST http://127.0.0.1:8080/api/sys/init | jq

  unseal:
    cmds:
      - 'curl -v -X POST -d "{\"key\": \"gSh2ciGJT3/jpNhe4vDAUWEfIbP0M5l4yFraa+2GRNeQ\"}" -H "X-Secman-Token: $ROOT_TOKEN" http://127.0.0.1:8080/api/sys/unseal | jq'
      - 'curl -v -X POST -d "{\"key\": \"9uguf46UYfjBFX1XfRFZha3qLkg4RqKkt0O9qJjImAWq\"}" -H "X-Secman-Token: $ROOT_TOKEN" http://127.0.0.1:8080/api/sys/unseal | jq'
      - 'curl -v -X POST -d "{\"key\": \"dVcE1LnclhyROYsshR85+U9Y86Awt44y0keCmxkv9E/x\"}" -H "X-Secman-Token: $ROOT_TOKEN" http://127.0.0.1:8080/api/sys/unseal | jq'

  enable-*:
    vars:
      ENGINE: '{{index .MATCH 0}}'
    cmds:
      - 'curl -v -X POST -H "X-Secman-Token: $ROOT_TOKEN" http://127.0.0.1:8080/api/sys/engines/enable/{{.ENGINE}} -d "{}" | jq'

  auth-params:
    cmds:
      - 'curl -H "Authorization: Bearer $JWT_TOKEN" -v http://127.0.0.1:8080/api/engine/auth/logopass/ | jq'

  enable_auth-*:
    vars:
      ENGINE: '{{index .MATCH 0}}'
    cmds:
      - 'curl -v -X POST -H "X-Secman-Token: $ROOT_TOKEN" http://127.0.0.1:8080/api/sys/auth/enable -d "{\"engine_path\": \"{{.ENGINE}}\"}" | jq'

  login:
    cmds:
      - "curl -v -X POST -d '{\"login\": \"user1\", \"password\": \"qwerty$4\"}'  http://127.0.0.1:8080/api/engine/auth/logopass/login| jq"

  register:
    cmds:
      - "curl -v -X POST -d '{\"login\": \"user1\", \"password\": \"qwerty$4\"}' http://127.0.0.1:8080/api/engine/auth/logopass/register| jq"

  run:
    cmds:
      - go build cmd/server/main.go
      - mv main secman
      - ./secman

  genmock-*:
    desc: exec "task genmock-OrdersRepository -- internal/server/entities"
          then rename internal/server/entities/mocks/CreateOrderService to snake case
    vars:
      STRUCT: '{{index .MATCH 0}}'
    cmds:
      - mockgen -package=mocks -destination={{.CLI_ARGS}}/{{.STRUCT}}.go github.com/vysogota0399/secman/{{.CLI_ARGS}} {{.STRUCT}}

  test_coverage:
    cmds:
      - go clean -testcache
      - go test -count 1 ./... -coverprofile=coverage.out
      - go tool cover -func=coverage.out
      - rm coverage.out

  create-secret:
    cmds:
      - 'curl -v -X POST -H "Authorization: Bearer $JWT_TOKEN" -H "Content-Type: application/json" http://127.0.0.1:8080/api/engine/secrets/kv -d "{\"key\": \"test\", \"value\": \"test\"}" | jq'

  get-secret:
    cmds:
      - 'curl -v -H "Authorization: Bearer $JWT_TOKEN" http://127.0.0.1:8080/api/engine/secrets/kv/test | jq'

  get-secret-params:
    cmds:
      - 'curl -v -H "Authorization: Bearer $JWT_TOKEN" http://127.0.0.1:8080/api/engine/secrets/kv/test/params | jq'

  update-secret-params:
    cmds:
      - 'curl -v -X PUT -H "Authorization: Bearer $JWT_TOKEN" -H "Content-Type: application/json" http://127.0.0.1:8080/api/engine/secrets/kv/test/params -d "{\"metadata\": {\"lorem\": \"ipsum\"}}" | jq'

  create-card:
    cmds:
      - 'curl -v -X POST -H "Authorization: Bearer $JWT_TOKEN" -H "Content-Type: application/json" http://127.0.0.1:8080/api/engine/secrets/pci_dss -d "{\"card_data\": {\"pan\": \"1234567890123458\", \"cardholder_name\": \"John Doe\", \"expiry_date\": \"2025-01-01T00:00:00Z\"}}" | jq'

  delete-card:
    cmds:
      - 'curl -v -X DELETE -H "Authorization: Bearer $JWT_TOKEN" http://127.0.0.1:8080/api/engine/secrets/pci_dss/2c028569da61ac7239fc1b1bd59f12052b3b478f1bf53ec6a098edd6ad61211e| jq'

  enable-blob:
    cmds:
      - 'curl -v -X POST -H "Authorization: Bearer $JWT_TOKEN" -H "Content-Type: application/json" http://127.0.0.1:8080/api/sys/engines/enable/secrets/blobs -d "{\"adapter\": {\"url\": \"127.0.0.1:9000\", \"user\": \"minio\", \"password\": \"minio123\", \"ssl\": false}}" | jq'

  create-blob:
    cmds:
      - echo "test" > testfile.txt
      - 'curl -v -X POST -H "Authorization: Bearer $JWT_TOKEN" -H "Content-Type: multipart/form-data" http://127.0.0.1:8080/api/engine/secrets/blobs -F "file=@testfile.txt" -F "metadata[lorem]=ipsum" | jq'
      - rm testfile.txt

  delete-blob:
    cmds:
      - 'curl -v -X DELETE -H "Authorization: Bearer $JWT_TOKEN" http://127.0.0.1:8080/api/engine/secrets/blobs/2r2bioCZYxRDaWbOjHPNIbVkVIVWfoBfy8YXLpfJAKvfRVpxZztSUSqwcjZeGHySD2xHvXWZBJfj4Aok8cmSxg==| jq'

  show-blob:
    cmds:
      - 'curl -v -H "Authorization: Bearer $JWT_TOKEN" http://127.0.0.1:8080/api/engine/secrets/blobs/Coezh1EN7uBqpdYVeZIblGrIQFkmLbmimwgsK6idZJb6JKfpAd9rJRzXnwJZn138w0gYp9j0sGaJZNKUdzwJmQ=='

  show-blob-metadata:
    cmds:
      - 'curl -v -H "Authorization: Bearer $JWT_TOKEN" http://127.0.0.1:8080/api/engine/secrets/blobs/Coezh1EN7uBqpdYVeZIblGrIQFkmLbmimwgsK6idZJb6JKfpAd9rJRzXnwJZn138w0gYp9j0sGaJZNKUdzwJmQ==/metadata | jq'

  update-blob-metadata:
    cmds:
      - 'curl -v -X PUT -H "Authorization: Bearer $JWT_TOKEN" -H "Content-Type: application/json" http://127.0.0.1:8080/api/engine/secrets/blobs/Coezh1EN7uBqpdYVeZIblGrIQFkmLbmimwgsK6idZJb6JKfpAd9rJRzXnwJZn138w0gYp9j0sGaJZNKUdzwJmQ==/metadata -d "{\"metadata\": {\"lorem\": \"ipsum\"}}" | jq'
